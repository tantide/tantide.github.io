[{"content":"使用Hugo和Stack主题搭建本地博客并通过GitHub Actions自动部署到GitHub Pages\n在开始之前，必要的准备\nGitHub账号【用于托管站点文件和展示博客】 git【推送站点文件到GitHub】 Linux基础知识 参考链接 https://brume.top/p/build-your-personal-blog-with-hugo\nhttps://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog\nhttps://github.com/CaiJimmy/hugo-theme-stack-starter\n环境说明 Ubuntu 24.04.3 LTS\ngit version 2.43.0\nhugo v0.151.1-1cdd17882c28a9f23278d38ef03b403954cfb1e5+extended\n本地建站 在终端执行如下命令，注意替换 站点名称\nhugo new site 站点名称\nhugo默认不提供主题，所以需要自行导入主题，此处使用Jimmy Cai创作的Stack主题。\n1 2 3 4 5 6 7 8 9 10 11 # 添加Stack主题并使用其提供的默认配置和示例 # 注意替换 站点名称 GitHub用户名 局域网IP cd 站点名称 git init git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack cp -r themes/hugo-theme-stack/exampleSite/content/* content/ cp themes/hugo-theme-stack/exampleSite/hugo.yaml ./ rm -f hugo.toml rm -rf content/post/rich-content sed -i \u0026#39;s|example.com|GitHub用户名.github.io|\u0026#39; hugo.yaml hugo server -D --baseURL=http://局域网IP:1313 --bind=局域网IP 现在，访问 http://局域网IP:1313 查看效果。\n自动部署 创建两个GitHub存储库： 一个名称为 站点名称 的仓库，用于存储站点源文件。 一个名称为 GitHub用户名.github.io 的public仓库，用于托管静态页面。 生成GitHub令牌： 前往主页Setttings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens -\u0026gt; Token(classic) 创建token(classic)并保存到站点名称仓库的Settings -\u0026gt; Secrets and variables -\u0026gt; Actions 创建.github/workflows/deploy.yaml文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # 注意替换 Token变量名 GitHub用户名 name: Deploy to Github Pages on: push: branches: [main] pull_request: branches: [main] jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build env: HUGO_ENV: production run: hugo --minify --gc - name: Deploy 🚀 uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.Token变量名 }} EXTERNAL_REPOSITORY: GitHub用户名/GitHub用户名.github.io PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 创建.gitignore文件，避免提交不必要的文件(夹) 1 echo -e \u0026#39;public\\nresources\\n.hugo_build.lock\\n\\n\u0026#39; \u0026gt; .gitignore 提交并推送到GitHub​​ 1 2 3 4 5 6 # 替换 GitHub用户名 站点名称 git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin git@github.com:GitHub用户名/站点名称.git git push -u origin main 验证部署： 查看Action结果和过程 访问 https://GitHub用户名.github.io 后续更新推送 1 2 3 git add . git commit -m \u0026#34;更新说明\u0026#34; git push ","date":"2025-10-20T10:33:50+08:00","image":"https://tantide.github.io/p/hello-hugo/hugo-logo-wide.svg","permalink":"https://tantide.github.io/p/hello-hugo/","title":"Hello Hugo"}]